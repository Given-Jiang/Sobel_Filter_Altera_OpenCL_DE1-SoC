LIBRARY ieee;
LIBRARY work;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;
USE ieee.std_logic_arith.all;
--USE work.hcc_package.all;
--USE work.hcc_library_package.all;

--**********************************************
--***                                        ***
--*** Generated by Floating Point Compiler   ***
--***                                        ***
--*** Copyright Altera Corporation 2008      ***
--***                                        ***
--***                                        ***
--*** Version 2008.2X - April 24,2008        ***
--*** Testing Version Only -                 ***
--*** Stratix V DSP Benchmarking             ***
--***                                        ***
--**********************************************

ENTITY dotp_core IS 
PORT(
      clock : IN STD_LOGIC;
      resetn : IN STD_LOGIC;
      valid_in : IN STD_LOGIC;
      valid_out : OUT STD_LOGIC;
      result : OUT STD_LOGIC_VECTOR(32 DOWNTO 1);
      a0 : IN STD_LOGIC_VECTOR(512 DOWNTO 1);
      a1 : IN STD_LOGIC_VECTOR(512 DOWNTO 1);
      a2 : IN STD_LOGIC_VECTOR(512 DOWNTO 1);
      a3 : IN STD_LOGIC_VECTOR(512 DOWNTO 1);
      b0 : IN STD_LOGIC_VECTOR(512 DOWNTO 1);
      b1 : IN STD_LOGIC_VECTOR(512 DOWNTO 1);
      b2 : IN STD_LOGIC_VECTOR(512 DOWNTO 1);
      b3 : IN STD_LOGIC_VECTOR(512 DOWNTO 1)
);
END dotp_core;

ARCHITECTURE gen OF dotp_core IS

COMPONENT sgm_fpmm64 
PORT (
      sysclk : IN STD_LOGIC;
      reset : IN STD_LOGIC;
      enable : IN STD_LOGIC;
      startin : IN STD_LOGIC;
      xx00 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx01 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx02 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx03 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx04 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx05 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx06 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx07 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx08 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx09 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx0a : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx0b : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx0c : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx0d : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx0e : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx0f : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx10 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx11 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx12 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx13 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx14 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx15 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx16 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx17 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx18 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx19 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx1a : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx1b : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx1c : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx1d : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx1e : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx1f : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx20 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx21 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx22 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx23 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx24 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx25 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx26 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx27 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx28 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx29 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx2a : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx2b : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx2c : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx2d : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx2e : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx2f : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx30 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx31 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx32 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx33 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx34 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx35 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx36 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx37 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx38 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx39 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx3a : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx3b : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx3c : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx3d : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx3e : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      xx3f : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc00 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc01 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc02 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc03 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc04 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc05 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc06 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc07 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc08 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc09 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc0a : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc0b : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc0c : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc0d : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc0e : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc0f : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc10 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc11 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc12 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc13 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc14 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc15 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc16 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc17 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc18 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc19 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc1a : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc1b : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc1c : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc1d : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc1e : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc1f : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc20 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc21 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc22 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc23 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc24 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc25 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc26 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc27 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc28 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc29 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc2a : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc2b : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc2c : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc2d : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc2e : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc2f : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc30 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc31 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc32 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc33 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc34 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc35 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc36 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc37 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc38 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc39 : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc3a : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc3b : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc3c : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc3d : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc3e : IN STD_LOGIC_VECTOR (32 DOWNTO 1);
      cc3f : IN STD_LOGIC_VECTOR (32 DOWNTO 1);

      startout : OUT STD_LOGIC;
      result : OUT STD_LOGIC_VECTOR (32 DOWNTO 1)
     );
END component;

     SIGNAL done : STD_LOGIC;
     SIGNAL res : STD_LOGIC_VECTOR(32 DOWNTO 1);
     SIGNAL reset : STD_LOGIC;
BEGIN

reset <= NOT resetn;

cmp0: sgm_fpmm64 
PORT MAP (sysclk=>clock, reset=>reset, enable=>'1', startin=>valid_in,
          startout=>done, result=>res,
xx00 => a0(32 DOWNTO 1),
cc00 => b0(32 DOWNTO 1),
xx01 => a0(64 DOWNTO 33),
cc01 => b0(64 DOWNTO 33),
xx02 => a0(96 DOWNTO 65),
cc02 => b0(96 DOWNTO 65),
xx03 => a0(128 DOWNTO 97),
cc03 => b0(128 DOWNTO 97),
xx04 => a0(160 DOWNTO 129),
cc04 => b0(160 DOWNTO 129),
xx05 => a0(192 DOWNTO 161),
cc05 => b0(192 DOWNTO 161),
xx06 => a0(224 DOWNTO 193),
cc06 => b0(224 DOWNTO 193),
xx07 => a0(256 DOWNTO 225),
cc07 => b0(256 DOWNTO 225),
xx08 => a0(288 DOWNTO 257),
cc08 => b0(288 DOWNTO 257),
xx09 => a0(320 DOWNTO 289),
cc09 => b0(320 DOWNTO 289),
xx0a => a0(352 DOWNTO 321),
cc0a => b0(352 DOWNTO 321),
xx0b => a0(384 DOWNTO 353),
cc0b => b0(384 DOWNTO 353),
xx0c => a0(416 DOWNTO 385),
cc0c => b0(416 DOWNTO 385),
xx0d => a0(448 DOWNTO 417),
cc0d => b0(448 DOWNTO 417),
xx0e => a0(480 DOWNTO 449),
cc0e => b0(480 DOWNTO 449),
xx0f => a0(512 DOWNTO 481),
cc0f => b0(512 DOWNTO 481),
xx10 => a1(32 DOWNTO 1),
cc10 => b1(32 DOWNTO 1),
xx11 => a1(64 DOWNTO 33),
cc11 => b1(64 DOWNTO 33),
xx12 => a1(96 DOWNTO 65),
cc12 => b1(96 DOWNTO 65),
xx13 => a1(128 DOWNTO 97),
cc13 => b1(128 DOWNTO 97),
xx14 => a1(160 DOWNTO 129),
cc14 => b1(160 DOWNTO 129),
xx15 => a1(192 DOWNTO 161),
cc15 => b1(192 DOWNTO 161),
xx16 => a1(224 DOWNTO 193),
cc16 => b1(224 DOWNTO 193),
xx17 => a1(256 DOWNTO 225),
cc17 => b1(256 DOWNTO 225),
xx18 => a1(288 DOWNTO 257),
cc18 => b1(288 DOWNTO 257),
xx19 => a1(320 DOWNTO 289),
cc19 => b1(320 DOWNTO 289),
xx1a => a1(352 DOWNTO 321),
cc1a => b1(352 DOWNTO 321),
xx1b => a1(384 DOWNTO 353),
cc1b => b1(384 DOWNTO 353),
xx1c => a1(416 DOWNTO 385),
cc1c => b1(416 DOWNTO 385),
xx1d => a1(448 DOWNTO 417),
cc1d => b1(448 DOWNTO 417),
xx1e => a1(480 DOWNTO 449),
cc1e => b1(480 DOWNTO 449),
xx1f => a1(512 DOWNTO 481),
cc1f => b1(512 DOWNTO 481),
xx20 => a2(32 DOWNTO 1),
cc20 => b2(32 DOWNTO 1),
xx21 => a2(64 DOWNTO 33),
cc21 => b2(64 DOWNTO 33),
xx22 => a2(96 DOWNTO 65),
cc22 => b2(96 DOWNTO 65),
xx23 => a2(128 DOWNTO 97),
cc23 => b2(128 DOWNTO 97),
xx24 => a2(160 DOWNTO 129),
cc24 => b2(160 DOWNTO 129),
xx25 => a2(192 DOWNTO 161),
cc25 => b2(192 DOWNTO 161),
xx26 => a2(224 DOWNTO 193),
cc26 => b2(224 DOWNTO 193),
xx27 => a2(256 DOWNTO 225),
cc27 => b2(256 DOWNTO 225),
xx28 => a2(288 DOWNTO 257),
cc28 => b2(288 DOWNTO 257),
xx29 => a2(320 DOWNTO 289),
cc29 => b2(320 DOWNTO 289),
xx2a => a2(352 DOWNTO 321),
cc2a => b2(352 DOWNTO 321),
xx2b => a2(384 DOWNTO 353),
cc2b => b2(384 DOWNTO 353),
xx2c => a2(416 DOWNTO 385),
cc2c => b2(416 DOWNTO 385),
xx2d => a2(448 DOWNTO 417),
cc2d => b2(448 DOWNTO 417),
xx2e => a2(480 DOWNTO 449),
cc2e => b2(480 DOWNTO 449),
xx2f => a2(512 DOWNTO 481),
cc2f => b2(512 DOWNTO 481),
xx30 => a3(32 DOWNTO 1),
cc30 => b3(32 DOWNTO 1),
xx31 => a3(64 DOWNTO 33),
cc31 => b3(64 DOWNTO 33),
xx32 => a3(96 DOWNTO 65),
cc32 => b3(96 DOWNTO 65),
xx33 => a3(128 DOWNTO 97),
cc33 => b3(128 DOWNTO 97),
xx34 => a3(160 DOWNTO 129),
cc34 => b3(160 DOWNTO 129),
xx35 => a3(192 DOWNTO 161),
cc35 => b3(192 DOWNTO 161),
xx36 => a3(224 DOWNTO 193),
cc36 => b3(224 DOWNTO 193),
xx37 => a3(256 DOWNTO 225),
cc37 => b3(256 DOWNTO 225),
xx38 => a3(288 DOWNTO 257),
cc38 => b3(288 DOWNTO 257),
xx39 => a3(320 DOWNTO 289),
cc39 => b3(320 DOWNTO 289),
xx3a => a3(352 DOWNTO 321),
cc3a => b3(352 DOWNTO 321),
xx3b => a3(384 DOWNTO 353),
cc3b => b3(384 DOWNTO 353),
xx3c => a3(416 DOWNTO 385),
cc3c => b3(416 DOWNTO 385),
xx3d => a3(448 DOWNTO 417),
cc3d => b3(448 DOWNTO 417),
xx3e => a3(480 DOWNTO 449),
cc3e => b3(480 DOWNTO 449),
xx3f => a3(512 DOWNTO 481),
cc3f => b3(512 DOWNTO 481));

result <= res;
valid_out <= done;

END gen;
